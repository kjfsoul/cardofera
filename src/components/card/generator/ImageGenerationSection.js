import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Wand2, RefreshCw, Loader2 } from "lucide-react";
import { Progress } from "@/components/ui/progress";
import { cn } from "@/lib/utils";
const ImageGenerationSection = ({ generatedImages, selectedImageIndex, handleImageSelect, handleGenerate, isGenerating, progress, generationError, }) => {
    return (_jsxs(Card, { className: "p-6", children: [_jsx("h2", { className: "text-2xl font-semibold mb-4", children: "2. Generate Your Image" }), _jsxs("div", { className: "space-y-6", children: [_jsx("div", { className: "grid grid-cols-3 gap-4", children: [0, 1, 2].map((index) => (_jsxs("div", { className: "flex flex-col items-center", children: [_jsx("div", { className: cn("relative w-full aspect-square bg-muted rounded-lg mb-2 overflow-hidden transition-all duration-200", selectedImageIndex === index && "ring-2 ring-primary ring-offset-2"), children: generatedImages[index] ? (_jsx("img", { src: generatedImages[index], alt: `Generated option ${index + 1}`, className: "w-full h-full object-cover transition-transform hover:scale-105" })) : (_jsx("div", { className: "w-full h-full flex items-center justify-center bg-muted", children: isGenerating ? (_jsx(Loader2, { className: "w-8 h-8 animate-spin text-muted-foreground" })) : (_jsxs("span", { className: "text-muted-foreground", children: ["Option ", index + 1] })) })) }), _jsx(Button, { variant: selectedImageIndex === index ? "default" : "outline", className: "w-full", onClick: () => handleImageSelect(index), disabled: !generatedImages[index], children: generatedImages[index] ? "Select" : `Option ${index + 1}` })] }, index))) }), isGenerating && (_jsxs("div", { className: "space-y-2", children: [_jsx(Progress, { value: progress, className: "w-full" }), _jsxs("p", { className: "text-sm text-muted-foreground text-center", children: ["Generating your images... ", progress, "%"] })] })), _jsxs("div", { className: "flex gap-2", children: [_jsx(Button, { onClick: handleGenerate, className: "flex-1 h-12 text-lg", disabled: isGenerating, children: isGenerating ? (_jsxs(_Fragment, { children: [_jsx(Loader2, { className: "mr-2 h-5 w-5 animate-spin" }), "Generating..."] })) : (_jsxs(_Fragment, { children: [_jsx(Wand2, { className: "mr-2 h-5 w-5" }), "Generate Options"] })) }), _jsxs(Button, { variant: "secondary", className: "h-12", onClick: handleGenerate, disabled: isGenerating, children: [_jsx(RefreshCw, { className: "mr-2 h-5 w-5" }), "Retry"] })] }), generationError && (_jsx("div", { className: "text-red-500 text-sm bg-red-50 p-4 rounded-lg", children: generationError }))] })] }));
};
export default ImageGenerationSection;
